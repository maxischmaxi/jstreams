// @generated by protoc-gen-es v1.10.0
// @generated from file items/v1/items.proto (package items, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message items.GetBaseItemsRequest
 */
export declare class GetBaseItemsRequest extends Message<GetBaseItemsRequest> {
  /**
   * @generated from field: string patchVersion = 1;
   */
  patchVersion: string;

  constructor(data?: PartialMessage<GetBaseItemsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "items.GetBaseItemsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBaseItemsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBaseItemsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBaseItemsRequest;

  static equals(a: GetBaseItemsRequest | PlainMessage<GetBaseItemsRequest> | undefined, b: GetBaseItemsRequest | PlainMessage<GetBaseItemsRequest> | undefined): boolean;
}

/**
 * @generated from message items.GetBaseItemsResponse
 */
export declare class GetBaseItemsResponse extends Message<GetBaseItemsResponse> {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: items.Item basic = 3;
   */
  basic?: Item;

  /**
   * @generated from field: map<string, items.Item> data = 4;
   */
  data: { [key: string]: Item };

  constructor(data?: PartialMessage<GetBaseItemsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "items.GetBaseItemsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBaseItemsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBaseItemsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBaseItemsResponse;

  static equals(a: GetBaseItemsResponse | PlainMessage<GetBaseItemsResponse> | undefined, b: GetBaseItemsResponse | PlainMessage<GetBaseItemsResponse> | undefined): boolean;
}

/**
 * @generated from message items.GetItemImageByIdRequest
 */
export declare class GetItemImageByIdRequest extends Message<GetItemImageByIdRequest> {
  /**
   * @generated from field: int32 itemId = 1;
   */
  itemId: number;

  /**
   * @generated from field: string patchVersion = 2;
   */
  patchVersion: string;

  constructor(data?: PartialMessage<GetItemImageByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "items.GetItemImageByIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetItemImageByIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetItemImageByIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetItemImageByIdRequest;

  static equals(a: GetItemImageByIdRequest | PlainMessage<GetItemImageByIdRequest> | undefined, b: GetItemImageByIdRequest | PlainMessage<GetItemImageByIdRequest> | undefined): boolean;
}

/**
 * @generated from message items.GetItemImageByIdResponse
 */
export declare class GetItemImageByIdResponse extends Message<GetItemImageByIdResponse> {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  constructor(data?: PartialMessage<GetItemImageByIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "items.GetItemImageByIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetItemImageByIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetItemImageByIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetItemImageByIdResponse;

  static equals(a: GetItemImageByIdResponse | PlainMessage<GetItemImageByIdResponse> | undefined, b: GetItemImageByIdResponse | PlainMessage<GetItemImageByIdResponse> | undefined): boolean;
}

/**
 * @generated from message items.GetItemInformationByIdRequest
 */
export declare class GetItemInformationByIdRequest extends Message<GetItemInformationByIdRequest> {
  /**
   * @generated from field: string patchVersion = 1;
   */
  patchVersion: string;

  /**
   * @generated from field: int32 itemId = 2;
   */
  itemId: number;

  constructor(data?: PartialMessage<GetItemInformationByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "items.GetItemInformationByIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetItemInformationByIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetItemInformationByIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetItemInformationByIdRequest;

  static equals(a: GetItemInformationByIdRequest | PlainMessage<GetItemInformationByIdRequest> | undefined, b: GetItemInformationByIdRequest | PlainMessage<GetItemInformationByIdRequest> | undefined): boolean;
}

/**
 * @generated from message items.GetItemInformationByIdResponse
 */
export declare class GetItemInformationByIdResponse extends Message<GetItemInformationByIdResponse> {
  /**
   * @generated from field: items.Item item = 1;
   */
  item?: Item;

  constructor(data?: PartialMessage<GetItemInformationByIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "items.GetItemInformationByIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetItemInformationByIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetItemInformationByIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetItemInformationByIdResponse;

  static equals(a: GetItemInformationByIdResponse | PlainMessage<GetItemInformationByIdResponse> | undefined, b: GetItemInformationByIdResponse | PlainMessage<GetItemInformationByIdResponse> | undefined): boolean;
}

/**
 * @generated from message items.Item
 */
export declare class Item extends Message<Item> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: items.Rune rune = 2;
   */
  rune?: Rune;

  /**
   * @generated from field: items.Gold gold = 3;
   */
  gold?: Gold;

  /**
   * @generated from field: string group = 4;
   */
  group: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from field: string colloq = 6;
   */
  colloq: string;

  /**
   * @generated from field: string plaintext = 7;
   */
  plaintext: string;

  /**
   * @generated from field: bool consumed = 8;
   */
  consumed: boolean;

  /**
   * @generated from field: int32 stacks = 9;
   */
  stacks: number;

  /**
   * @generated from field: int32 depth = 10;
   */
  depth: number;

  /**
   * @generated from field: bool consumeOnFull = 11;
   */
  consumeOnFull: boolean;

  /**
   * @generated from field: int32 specialRecipe = 12;
   */
  specialRecipe: number;

  /**
   * @generated from field: bool inStore = 13;
   */
  inStore: boolean;

  /**
   * @generated from field: bool hideFromAll = 14;
   */
  hideFromAll: boolean;

  /**
   * @generated from field: string requiredChampion = 15;
   */
  requiredChampion: string;

  /**
   * @generated from field: string requiredAlly = 16;
   */
  requiredAlly: string;

  /**
   * @generated from field: map<string, float> stats = 17;
   */
  stats: { [key: string]: number };

  /**
   * @generated from field: map<string, bool> maps = 18;
   */
  maps: { [key: string]: boolean };

  /**
   * @generated from field: repeated string tags = 19;
   */
  tags: string[];

  /**
   * @generated from field: map<string, string> effect = 20;
   */
  effect: { [key: string]: string };

  constructor(data?: PartialMessage<Item>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "items.Item";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Item;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Item;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Item;

  static equals(a: Item | PlainMessage<Item> | undefined, b: Item | PlainMessage<Item> | undefined): boolean;
}

/**
 * @generated from message items.Gold
 */
export declare class Gold extends Message<Gold> {
  /**
   * @generated from field: int32 base = 1;
   */
  base: number;

  /**
   * @generated from field: int32 total = 2;
   */
  total: number;

  /**
   * @generated from field: int32 sell = 3;
   */
  sell: number;

  /**
   * @generated from field: bool purchasable = 4;
   */
  purchasable: boolean;

  constructor(data?: PartialMessage<Gold>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "items.Gold";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Gold;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Gold;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Gold;

  static equals(a: Gold | PlainMessage<Gold> | undefined, b: Gold | PlainMessage<Gold> | undefined): boolean;
}

/**
 * @generated from message items.Rune
 */
export declare class Rune extends Message<Rune> {
  /**
   * @generated from field: bool isrune = 1;
   */
  isrune: boolean;

  /**
   * @generated from field: int32 tier = 2;
   */
  tier: number;

  /**
   * @generated from field: string type = 3;
   */
  type: string;

  constructor(data?: PartialMessage<Rune>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "items.Rune";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Rune;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Rune;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Rune;

  static equals(a: Rune | PlainMessage<Rune> | undefined, b: Rune | PlainMessage<Rune> | undefined): boolean;
}

